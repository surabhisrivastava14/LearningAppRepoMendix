// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package tcconnector.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import tcconnector.foundation.BusinessObjectMappings;
import tcconnector.foundation.JModelObject;
import tcconnector.foundation.JPolicy;
import tcconnector.foundation.TcConnection;
import tcconnector.internal.foundation.Constants;
import tcconnector.internal.foundation.Messages;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.thirdparty.org.json.JSONArray;
import com.mendix.thirdparty.org.json.JSONObject;

/**
 * SOA URL:
 * Cad-2007-01-StructureManagement/getVariantRules
 * 
 * Description: 
 * The GetRevisionRules service gets all the variant rule related with given Item Revision.
 * 
 * Returns:
 * Input Item Revision entity's TcConnector.variantRulesForItemRevision association will be updated with related variant rules.
 * 
 */
public class GetVariantRule extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __ItemRevision;
	private tcconnector.proxies.ItemRevision ItemRevision;
	private java.lang.String BusinessObjectMappings;
	private java.lang.String ConfigurationName;

	public GetVariantRule(IContext context, IMendixObject ItemRevision, java.lang.String BusinessObjectMappings, java.lang.String ConfigurationName)
	{
		super(context);
		this.__ItemRevision = ItemRevision;
		this.BusinessObjectMappings = BusinessObjectMappings;
		this.ConfigurationName = ConfigurationName;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.ItemRevision = this.__ItemRevision == null ? null : tcconnector.proxies.ItemRevision.initialize(getContext(), __ItemRevision);

		// BEGIN USER CODE
		boolean isGetVariantRuleSuccess = true;
		try {
			JSONObject getVariantRuleBody = new JSONObject();
			JSONArray itemRevs = new JSONArray();

			JModelObject itemRevJModelObj = new JModelObject(getContext(), __ItemRevision);
			JSONObject itemRevJSONObj = new JSONObject();
			itemRevJSONObj.put("uid", itemRevJModelObj.getUID());
			itemRevs.put(itemRevJSONObj);
			getVariantRuleBody.put("itemRevs", itemRevs);

			BusinessObjectMappings boMappings = new BusinessObjectMappings(BusinessObjectMappings, ConfigurationName);
			JPolicy policy = new JPolicy(boMappings);

			JSONObject getVariantRuleResponse = TcConnection.callTeamcenterService(getContext(),
					Constants.OPERATION_GETVARIANTRULES, getVariantRuleBody, policy, ConfigurationName);
			if (getVariantRuleResponse != null) {
				JSONArray varRuleJASONArray = getVariantRuleResponse.getJSONArray("inputItemRevToVarRules");

				if (varRuleJASONArray.length() >= 1) {
					JSONArray varRuleJASONArray1 = varRuleJASONArray.getJSONArray(1);
					if (varRuleJASONArray1.length() > 0) {
						JSONArray varRuleJASONArray2 = varRuleJASONArray1.getJSONArray(0);
						for (int cnt = 0; cnt < varRuleJASONArray2.length(); cnt++) {
							JSONObject varRuleJASONObject = varRuleJASONArray2.getJSONObject(cnt);
							JModelObject varRuleModelObject = (JModelObject) varRuleJASONObject;
							String entityName = boMappings.getEntityName("VariantRule", "VariantRule");
							IMendixObject varRuleEntity = Core.instantiate(getContext(), entityName);
							varRuleModelObject.initializeEntity(getContext(), varRuleEntity, null, ConfigurationName);
							varRuleEntity.setValue(getContext(), "TcConnector.variantRulesForItemRevision",
									ItemRevision.getMendixObject().getId());
						}
					}
				}
			}
		} catch (Exception e) {
			Constants.LOGGER.error(Messages.VariantRuleErrorMessage.VariantRuleError + e.getMessage());
			isGetVariantRuleSuccess = false;
			throw e;
		}
		return isGetVariantRuleSuccess;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetVariantRule";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
